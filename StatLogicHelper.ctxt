#BlueJ class context
comment0.target=StatLogicHelper
comment0.text=\r\n\ Class\ that\ implements\ the\ whole\ of\ the\ logic\ behind\ the\ statistics.\r\n\ Note\:\ In\ this\ class,\ I\ make\ use\ of\ an\ online\ tool\ offered\ by\ the\ British\ Geological\ Survey\ (https\://www.bgs.ac.uk/)\r\n\ in\ order\ to\ convert\ coordinates\ to\ British\ National\ Grid\ easting\ and\ northing\ values.\r\n\ This\ tool\ is\ offered\ publicly.\r\n\ Consider\ all\ results\ of\ the\ conversion\ from\ coordinates\ to\ BNG\ values\ as\ being\r\n\ based\ upon\ the\ tool\ offered\ at\ https\://webapps.bgs.ac.uk/data/webservices/convertForm.cfm,\ with\ the\ permission\ of\ the\ British\ Geological\ Survey.\r\n\r\n\ @author\ Alexandru\ Matei,\ k20059425\r\n\ @version\ 7/04/2021\r\n
comment1.params=filteredListings
comment1.target=StatLogicHelper(java.util.ArrayList)
comment10.params=
comment10.target=void\ computeBaseStats()
comment10.text=\r\n\ Computes\ the\ four\ basic\ stats,\ that\ depend\ only\ on\ the\ user's\ price\ range\ selection.\r\n\r\n
comment11.params=
comment11.target=void\ computeMostConnectedFavProperty()
comment11.text=\r\n\ Finds\ the\ most\ connected\ property\ (\ as\ far\ as\ moving\ around\ the\ city\ goes\ )\ out\ of\ those\ favorited\ by\ the\ user\r\n
comment12.params=
comment12.target=void\ computeLeastPollutedFavProperty()
comment12.text=\r\n\ Finds\ the\ property\ in\ the\ least\ polluted\ area,\ out\ of\ the\ properties\ favorited\ by\ the\ user.\r\n
comment13.params=
comment13.target=void\ computeFavouriteBorough()
comment13.text=\r\n\ Method\ that\ finds\ the\ borough\ that\ has\ the\ most\ properties\ favorited\ by\ the\ user.\r\n
comment14.params=
comment14.target=void\ computeCheapestFavProperty()
comment14.text=\r\n\ Finds\ the\ cheapest\ property\ out\ of\ the\ user's\ favorites.\r\n
comment15.params=
comment15.target=java.lang.String\ getAvgNoOfReviewsStat()
comment15.text=\r\n\ Returns\ the\ string\ containing\ the\ statistic\ on\ the\ average\ number\ of\ reviews\ per\ propety.\r\n\ @return\ Statistic\ on\ the\ average\ number\ of\ reviews\ per\ property\r\n
comment16.params=
comment16.target=java.lang.String\ getNumberOfAvailableProperties()
comment16.text=\r\n\ Returns\ a\ string\ detailing\ the\ number\ of\ available\ properties\ within\ the\ specified\ price\ range.\r\n\ @return\ String\ containing\ the\ number\ of\ available\ properties.\r\n
comment17.params=
comment17.target=java.lang.String\ getNumberOfHomesAndAppartments()
comment17.text=\r\n\ Returns\ a\ string\ detailing\ the\ number\ of\ homes\ and\ appartments\ within\ the\ specified\ price\ range.\r\n\ @return\ String\ containing\ the\ number\ of\ homes\ and\ appartments.\r\n
comment18.params=
comment18.target=java.lang.String\ getMostExpensiveBorough()
comment18.text=\r\n\ Returns\ a\ string\ specifying\ which\ borough\ contains\ the\ most\ expensive\ properties\ on\ average.\ (\ Out\ of\ those\ that\ are\ within\ the\ user's\ price\ range\ )\r\n\ @return\ String\ containing\ the\ most\ expensive\ borough\r\n
comment19.params=
comment19.target=java.lang.String\ getMostConnectedFavProperty()
comment19.text=\r\n\ Returns\ a\ string\ specifying\ the\ most\ well-connected\ property\ out\ of\ those\ favorited\ by\ the\ user.\r\n\ @return\ String\ containing\ the\ best\ connected\ favorite\ property.\r\n
comment2.params=listing
comment2.target=void\ addToFavorites(AirbnbListing)
comment2.text=\r\n\ Adds\ provided\ listing\ to\ favorites\r\n\ @param\ listing\r\n
comment20.params=
comment20.target=java.lang.String\ getLeastPollutedFavProperty()
comment20.text=\r\n\ Returns\ a\ string\ specifying\ which\ of\ the\ user's\ favorite\ properties\ is\ in\ the\ least\ polluted\ area.\r\n\ @return\ String\ containing\ the\ property\ that\ is\ least\ polluted\ out\ of\ the\ user's\ favorite\ properties.\r\n
comment21.params=
comment21.target=java.lang.String\ getCheapestFavProperty()
comment21.text=\r\n\ Returns\ a\ string\ specifying\ the\ cheapest\ property\ out\ of\ the\ user's\ favorite\ properties.\r\n\ @return\ String\ containing\ the\ cheapest\ property\ out\ of\ the\ user's\ favorites.\r\n
comment22.params=
comment22.target=java.lang.String\ getFavouriteBorough()
comment22.text=\r\n\ Returns\ a\ string\ specifying\ the\ borough\ that\ contains\ the\ most\ properties\ favorited\ by\ the\ user.\r\n\ @return\ The\ user's\ favorite\ borough.\r\n
comment3.params=listing
comment3.target=void\ removeFromFavorites(AirbnbListing)
comment3.text=\r\n\ Removes\ provided\ listing\ from\ favorites\r\n\ @param\ listing\r\n
comment4.params=listing
comment4.target=boolean\ checkIfFavorite(AirbnbListing)
comment4.text=\r\n\ Checks\ if\ a\ provided\ listing\ is\ in\ the\ user's\ favorites\r\n\ @param\ listing\r\n\ @return\r\n
comment5.params=currentStat
comment5.target=int\ getPreviousStatIndex(int)
comment5.text=\r\n\ Unoccupies\ the\ stat\ for\ the\ passed\ index,\ looks\ for\ the\ nearest\ stat\ index\ that\ is\ smaller\ than\ the\ given\ int\ and\ that\ is\ not\ taken.\r\n\ @param\ currentStat\ The\ current\ index\r\n\ @return\ Unoccupied\ previous\ stat\ index.\r\n
comment6.params=currentStat
comment6.target=int\ getNextStatIndex(int)
comment6.text=\r\n\ Unoccupies\ the\ stat\ for\ the\ passed\ index,\ looks\ for\ the\ nearest\ stat\ index\ that\ is\ bigger\ than\ the\ given\ int\ and\ that\ is\ not\ taken.\r\n\ @param\ currentStat\ The\ current\ index\r\n\ @return\ Next\ unoccupied\ stat\ index\r\n
comment7.params=list
comment7.target=void\ updateStats(java.util.ArrayList)
comment7.text=\r\n\ Computes\ all\ of\ the\ statistics.\r\n
comment8.params=
comment8.target=void\ updateOnlyFavoriteStats()
comment8.text=\r\n\ Only\ computes\ the\ statistics\ related\ to\ the\ user's\ favorite\ properties.\r\n
comment9.params=statIndex
comment9.target=java.lang.String\ getStatTextByIndex(int)
comment9.text=\r\n\ Returns\ a\ string\ containing\ the\ information\ to\ be\ displayed\ for\ a\ specified\ statistic.\r\n\ @param\ statIndex\ The\ index\ specific\ to\ the\ statistic.\r\n\ @return\ The\ text\ describing\ that\ statistic.\r\n
numComments=23
